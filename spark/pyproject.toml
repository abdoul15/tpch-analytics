[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tpchproject"
version = "0.1.0"
description = "TPCH Data Pipeline Project"
authors = [
    {name="Your Name", email="your.email@example.com"}
]
license = {file="LICENSE"}
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "great-expectations[sqlalchemy]==0.18.21",
    "pytest==7.4.0",
    "faker==19.3.0",
    "delta-spark==2.3.0",
    "sqlalchemy==2.0.20",
    "psycopg2-binary==2.9.7",
    "python-dotenv==0.21.0",
    "mypy==0.991",
    "notebook==6.5.4",
    "jupyter-server<2.0.0",
    "boto3==1.34.104"
]

[project.optional-dependencies]
dev = [
    "pytest-cov",
    "pre-commit",
    "ruff>=0.3.0",
    "mypy==0.991"
]

# Configuration de Ruff
[tool.ruff]
line-length = 88
indent-width = 4

# Règles à activer
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

# Règles à ignorer
ignore = [
    "E501",  # line length violations
]

# Exclusions
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist"
]

# Compatibilité Python
target-version = "py39"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # ignore unused imports in __init__.py

[tool.ruff.isort]
known-first-party = ["tpchproject"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=tpchproject --cov-report=term-missing"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore",
]

# Configuration pour le formatage de docstring
[tool.ruff.pydocstyle]
convention = "google"

# Configuration pour les imports
[tool.ruff.isort.sections]
"FUTURE" = ["__future__"]
"STDLIB" = ["typing", "pathlib"]
"THIRDPARTY" = ["pyspark", "delta", "sqlalchemy"]
"FIRSTPARTY" = ["tpchproject"]
"LOCALFOLDER" = ["."]

# Configuration supplémentaire pour Ruff
[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.flake8-import-conventions]
[tool.ruff.flake8-import-conventions.aliases]
# Définir des alias communs pour les imports
numpy = "np"
pandas = "pd"
pyspark = "spark"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"